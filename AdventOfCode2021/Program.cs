// See https://aka.ms/new-console-template for more information
using AdventOfCode2021.Code;
using AdventOfCode2021.inputs;

Console.WriteLine(RadarReader.HowManyIncreases(Day1Input.Radar));
Console.WriteLine(RadarReader.HowManySlidingIncreases(Day1Input.Radar));
Console.WriteLine(SubmarineNavigation.NavigateSub(Day2.NavigationInstructions));
Console.WriteLine(SubmarineNavigation.AimSub(Day2.NavigationInstructions));
Console.WriteLine("Power consumption is:");
Console.WriteLine(PowerConsumption.GetPowerConsumption(Inputs.Day3));
Console.WriteLine("Life support Rating is:");
Console.WriteLine(PowerConsumption.GetLifeSupportRating(Inputs.Day3));
Console.WriteLine(Bingo.GetBingoWinnerScore(Inputs.Day4));
Console.WriteLine(Bingo.GetBingoLoserScore(Inputs.Day4));
Console.WriteLine("Hydrothermal Overlap number is:");
Console.WriteLine(HydrothermalVents.CountOverlaps(Inputs.Day5));
Console.WriteLine(Lanternfish.HowManyFishColumns(Inputs.Day6, 256));
Console.WriteLine("Fuel needed to align subs horizontally");
Console.WriteLine(CrabSubs.FuelForOneLine(Inputs.Day7));
Console.WriteLine("Easy outputs (1,4,7,8) found on display:");
Console.WriteLine(SevenSegmentDisplay.CountEasyOutputs(Inputs.Day8));
Console.WriteLine("Seven Segment display Sum = ");
Console.WriteLine(SevenSegmentDisplay.GetSumOfOutputs(Inputs.Day8));
Console.WriteLine("Total Risk Factor for lowest points:");
Console.WriteLine(LavaTunnel.FindSumOfLowRiskLevel(Inputs.Day9));
Console.WriteLine("Product of the size of 3 largest lava basins");
Console.WriteLine(LavaTunnel.Find3LargestBasins(Inputs.Day9));
Console.WriteLine("Error score for corrupted syntax lines:");
Console.WriteLine(SyntaxFixer.FindSyntaxErrorScore(Inputs.Day10));
Console.WriteLine("Median Error score for incomplete syntax lines:");
Console.WriteLine(SyntaxFixer.FindMedianIncompleteScore(Inputs.Day10));
Console.WriteLine("Number of flashes in 100 simulated octosteps:");
Console.WriteLine(FlashingOctopuses.HowManyFlashesAfter100(Inputs.Day11));
Console.WriteLine("First synchronous octostep:");
Console.WriteLine(FlashingOctopuses.WhenIsFirstSyncedFlash(Inputs.Day11));
Console.WriteLine("PossibleCavePaths:");
Console.WriteLine("***** SKIPPED FOR TIME ******");
//Console.WriteLine(CavePaths.HowManyPaths(Inputs.Day12));
Console.WriteLine("Visible points after first fold");
Console.WriteLine(Origami.HowManyDotsAfter1Fold(Inputs.Day13));
Console.WriteLine("Final Origami Point Result");
Origami.PrintCapitalResult(Inputs.Day13);
Console.WriteLine("Difference in polymer elements after 10:");
Console.WriteLine(Polymers.DifferenceInMostAndLeastCommon(Inputs.Day14));
Console.WriteLine("Difference In polymer elements after 40:");
Console.WriteLine(LongPolymers.GetDifferenceAfter40Steps(Inputs.Day14));
Console.WriteLine("Shortest risk value in cave");
Console.WriteLine(RiskyPath.LeastRiskyValue(Inputs.Day15));
Console.WriteLine("Shortest risk value in entire cave");
Console.WriteLine("***** SKIPPED FOR TIME ******");
//Console.WriteLine(RiskyPath.LeastRiskyValueBigCave(Inputs.Day15));
